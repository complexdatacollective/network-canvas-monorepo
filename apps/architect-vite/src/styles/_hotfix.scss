@use '@codaco/ui/src/styles/global/core/units';

:root {
  --text: var(--color-charcoal);
  --input-label: var(--color-charcoal);
  /* stylelint-disable-next-line color-function-notation */
  --input-placeholder: rgba(0, 0, 0, 65%)
}

.node__label-text {
  color: var(--node--label);
}

a {
  text-decoration: none;
}

.button {
  color: var(--text-light);

  &:disabled,
  &[disabled] {
    opacity: .5;
    cursor: default;
  }

  &--white,
  &--platinum,
  &--platinum--dark {
    color: var(--text-dark);
  }
}

.form-fields-textarea__error {
  max-height: initial;
  opacity: 1;
  margin: units.unit(1) 0 0;
  color: var(--error);
}

.form-field-checkbox-group__error,
.form-field-radio-group__error,
.form-field-boolean__error {
  --text: var(--text-light);
}

.form-field-checkbox--disabled {
  font-style: italic;
  opacity: .75;
  cursor: not-allowed;
}

.form-field {
  padding: 1em units.unit(2);

  &.boolean {
    background: transparent;
    padding: 0;
  }
}

.form-field-toggle__button {
  background: var(--color-platinum--dark);
}

.dialog {
  --text: var(--color-white);

  .migration-panel {
    background: var(--color-navy-taupe);
    padding: 0 units.unit(2);
    border-radius: .75rem;
    overflow-y: auto;
    max-height: 18rem;

    code {
      background: var(--color-paradise-pink);
      padding: .1rem .25rem;
      border-radius: .2rem;
    }

    li {
      margin-bottom: 1rem;
      line-height: 1.5;
    }
  }
}

.dialog-release-notes {
  &__notes {
    max-height: 50vh;
    overflow-y: auto;
    background: var(--color-navy-taupe);
    padding: 0 1.2rem;
    border-radius: var(--border-radius);
  }
}

.dialog__additional-box {
  background-color: var(--background-dark);
}

.modal {
  height: 100vh;

  &__background {
    z-index: var(--z-modal);
  }

  &__content {
    flex-direction: row;
    z-index: var(--z-modal);
  }
}

.protocol-card {
  background: var(--color-white);
}

// Matierial-UI icon doesn't resize according to input font-size
.form-field-text {
  &--adornment {
    .MuiSvgIcon-root { // sass-lint:disable-line class-name-format
      font-size: 1.5em;
    }
  }
}

// Tooltip system overrides
.tippy-box {
  --tip-color: var(--color-rich-black);

  background: var(--tip-color);
  color: var(--text-light);
  border-radius: var(--border-radius);

  > .tippy-arrow {
    color: var(--tip-color);

    &::before {
      transform: scale(1.5);
    }
  }

  .tippy-content {
    padding: units.unit(1) units.unit(1.5);
  }

  // theme for validation error
  &[data-theme~='error'] {
    --tip-color: var(--error);
  }
}

// Make rich text toolbar background white within sections
.stage-editor-section {
  .rich-text__toolbar {
    background: var(--input-background);
  }
}

// Override UI toast style for now (make wider)
.toast-container-list {
  align-items: flex-end;
}

.toast {
  .toast-button-group {
    display: flex;
    justify-content: flex-end;

    button {
      &:not(:last-child) {
        margin-right: units.unit(1);
      }
    }
  }
}

.update-available-toast {
  width: 50rem;
}

.form-field-label {
  margin-top: units.unit(4);
  margin-bottom: units.unit(2);
  font-weight: 600;

  p {
    margin: 0;
    font-weight: inherit;
  }
}

// Rich text does not have the form-field class for some reason, so doesnt get bottom margin
.form-field-rich-text {
  margin-bottom: 2rem;
}
